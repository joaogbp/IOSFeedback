name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  verify:
    runs-on: macos-latest
    outputs:
      outputRepoName: ${{ steps.outputRepoName.outputs.result }}
    steps:
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: 🔍 Find Repo Name
      id: outputRepoName
      run: |
        echo "::set-output name=result::${GITHUB_REPOSITORY#*/}"

  lint:
    if: ${{ always() }}
    needs: [verify]
    runs-on: macos-latest
    outputs:
      outputLintSuccess: ${{ steps.stepLintSuccess.outputs.result }}
      outputLintFailure: ${{ steps.stepLintFailure.outputs.result }}
    steps:
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: Lint
      run: swiftlint
    - name: 🤔 Lint - Check Results - Success ✅
      if: ${{ success() }} # steps.build.outputs.exit_status == 0
      id: stepLintSuccess
      run: |
        echo "::set-output name=result::✅ Lint"
    - name: 🤔 Lint - Check Results - Failure ❌
      if: ${{ failure() }} # steps.build.outputs.exit_status != 0
      id: stepLintFailure
      run: |
        echo "::set-output name=result::❌ Lint"

  ios:
    if: ${{ always() }}
    needs: [verify]
    runs-on: macos-latest
    outputs:
      outputBuildSuccess: ${{ steps.stepBuildSuccess.outputs.result }}
      outputBuildFailure: ${{ steps.stepBuildFailure.outputs.result }}
      outputTestsSuccess: ${{ steps.stepTestsSuccess.outputs.result }}
      outputTestsFailure: ${{ steps.stepTestsFailure.outputs.result }}
      outputFinalSuccess: ${{ steps.stepFinalSuccess.outputs.result }}
      outputFinalFailure: ${{ steps.stepFinalFailure.outputs.result }}
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.TOKEN_CI }}
      GYM_USE_SYSTEM_SCM: true
      SCAN_USE_SYSTEM_SCM: true
    steps:
    - name: Repository checkout
      uses: actions/checkout@v2
    - name: List
      run: ls
      
    - name: Add Private Repo Auth
      run: git config --global --add url."https://${GITHUB_ACCESS_TOKEN}@github.com/${GITHUB_REPOSITORY_OWNER}".insteadOf "https://github.com/${GITHUB_REPOSITORY_OWNER}"
    - name: 📱 Build List
      run: xcodebuild -list
    
    - name: 📱 Build for iOS
      id: build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build-for-testing -scheme ${{needs.verify.outputs.outputRepoName}} -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" | xcpretty
    - name: 🤔 Build for iOS - Check Results - Success ✅
      if: ${{ success() }} # steps.build.outputs.exit_status == 0
      id: stepBuildSuccess
      run: |
        echo "::set-output name=result::✅ Build"
    - name: 🤔 Build for iOS - Check Results - Failure ❌
      if: ${{ failure() }} # steps.build.outputs.exit_status != 0
      id: stepBuildFailure
      run: |
        echo "::set-output name=result::❌ Build"
    
    - name: 📱 Tests for iOS
      id: tests
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild test-without-building -scheme ${{needs.verify.outputs.outputRepoName}}Tests -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" | xcpretty
    - name: 🧐 Tests for iOS - Check Results - Success ✅
      if: ${{ success() }} # steps.tests.outputs.exit_status == 0
      id: stepTestsSuccess
      run: |
        echo "::set-output name=result::✅ Tests"
    - name: 🧐 Tests for iOS - Check Results - Failure ❌
      if: ${{ failure() }} # steps.tests.outputs.exit_status != 0
      id: stepTestsFailure
      run: |
        echo "::set-output name=result::❌ Tests"
    
    - name: 👋🏻 Done - Check Results - Success ✅
      if: ${{ success() }}
      id: stepFinalSuccess
      run: |
        echo "::set-output name=result::✅"
    - name: 👋🏻 Done - Check Results - Failure ❌
      if: ${{ failure() }}
      id: stepFinalFailure
      run: |
        echo "::set-output name=result::❌"
      
  messageWhatsApp:
    if: ${{ always() }}
    needs: [lint, ios, verify]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Notification WhatsApp
        id: whatsapp-notify
        env:
          account_sid: ${{ secrets.twilio_account_sid }}
          auth_token: ${{ secrets.twilio_auth_token }}
          to_whatsapp_no: ${{ secrets.twilio_to_whatsapp_no }}
          message: |
              CI 👉🏻 [Main] ${{needs.verify.outputs.outputRepoName}} ${{needs.ios.outputs.outputFinalSuccess}}${{needs.ios.outputs.outputFinalFailure}}
              - ${{needs.lint.outputs.outputLintSuccess}}${{needs.lint.outputs.outputLintFailure}}
              - ${{needs.ios.outputs.outputBuildSuccess}}${{needs.ios.outputs.outputBuildFailure}}
              - ${{needs.ios.outputs.outputTestsSuccess}}${{needs.ios.outputs.outputTestsFailure}}
        uses: khaled-ibtikar/whatsapp-push-notify-action@master

  messageTelegram:
    if: ${{ always() }}
    needs: [lint, ios, verify]
    runs-on: ubuntu-latest
    steps:
    - name: Notification Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          CI 👉🏻 [Main] ${{needs.verify.outputs.outputRepoName}} ${{needs.ios.outputs.outputFinalSuccess}}${{needs.ios.outputs.outputFinalFailure}}
          - ${{needs.lint.outputs.outputLintSuccess}}${{needs.lint.outputs.outputLintFailure}}
          - ${{needs.ios.outputs.outputBuildSuccess}}${{needs.ios.outputs.outputBuildFailure}}
          - ${{needs.ios.outputs.outputTestsSuccess}}${{needs.ios.outputs.outputTestsFailure}}

  messageSlack:
    if: ${{ always() }}
    needs: [lint, ios, verify]
    runs-on: ubuntu-latest
    steps:
    - name: Notification Slack
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: front-mobile-ios-ci
        #SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        #SLACK_ICON: 🤖 #https://github.com/rtCamp.png?size=48
        SLACK_TITLE: Results CI
        SLACK_USERNAME: BotCI
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: |
          CI 👉🏻 [Main] ${{needs.verify.outputs.outputRepoName}} ${{needs.ios.outputs.outputFinalSuccess}}${{needs.ios.outputs.outputFinalFailure}}
          - ${{needs.lint.outputs.outputLintSuccess}}${{needs.lint.outputs.outputLintFailure}}
          - ${{needs.ios.outputs.outputBuildSuccess}}${{needs.ios.outputs.outputBuildFailure}}
          - ${{needs.ios.outputs.outputTestsSuccess}}${{needs.ios.outputs.outputTestsFailure}}
